- name: disbaling node js
  hosts: catalogue
  become: yes
  tasks:
  - name: disbaling default node js
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: create roboshop bultin user
    ansible.builtin.user:
      name: roboshop
      shell:  /sbin/nologin
      system: true
      home: /app

  - name: create a directory if it is not available
    ansible.builtin.file:
      path: /app
      state:  directory

  
  - name: download catalougue file
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

#this module thinks file exits on ansible control server,needs to extract on to remote machine
#remote_src: yes means files already exist in catalogue server
  - name: extract catalogue code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: Install packages based on package.json.
    community.general.npm:
      path: /app

  - name: copy the mongo service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name:  just for reload
    ansible.builtin.systemd_service:
    daemon_reload:  true

  - name: start and enable catalougue
    ansible.builtin.service:
      name: catalogue
      state:  start
      enabled:  yes
  
  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state:  present


  - name: load products
    ansible.builtin.shell: mongosh --host  mongodb.chinni.fun < /app/db/master-data.js
    





  
