- name: configuring the shipping component
  hosts:  shipping
  become: yes

  vars:
    mysql_host: "mysql.chinni.fun"    
    mysql_root_password: "RoboShop@1"


  tasks:
    - name: installing maven to the system
      ansible.builtin.dnf:  
        name: maven
        state:  installed

  
    - name: create roboshop bultin user
      ansible.builtin.user:
        name: roboshop
        shell: /sbin/nologin
        system: true
        home: /app

    - name: create a directory if it is not available
      ansible.builtin.file:
        path: /app
        state:  directory
 
    - name: download shipping file
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
        dest: /tmp/shipping.zip

#this module thinks file exits on ansible control server,needs to extract on to remote machine
#remote_src: yes means files already exist in catalogue server
    - name: extract shipping code
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: Install maven dependies
      ansible.builtin.command:  mvn clean package
      args:
        chdir: /app

    - name: renaming the file
      ansible.builtin.command:  mv target/shipping-1.0.jar shipping.jar 
      args:
        chdir: /app


    - name: copy the shipping service
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: just for reload
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: start and enable shipping
      ansible.builtin.service:
        name: shipping.service
        state: started
        enabled: yes

    - name: installing mysql to the system
      ansible.builtin.dnf:  
        name: mysql
        state:  installed


    - name: Load schema into MySQL
      ansible.builtin.shell: >
        mysql -h {{ mysql_host }} -uroot -p{{ mysql_root_password }} < /app/db/schema.sql
      args:
        executable: /bin/bash

    - name: Create app user in MySQL
      ansible.builtin.shell: >
        mysql -h {{ mysql_host }} -uroot -p{{ mysql_root_password }} < /app/db/app-user.sql
      args:
        executable: /bin/bash

    - name: Load master data into MySQL
      ansible.builtin.shell: >
        mysql -h {{ mysql_host }} -uroot -p{{ mysql_root_password }} < /app/db/master-data.sql
      args:
        executable: /bin/bash

    - name: Restart shipping service
      ansible.builtin.systemd:
        name: shipping
        state: restarted
        enabled: yes
